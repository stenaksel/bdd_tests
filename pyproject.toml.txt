# Configuration of code formatting
[tool.blue]
line-length = 100
target-version = ['py310']
extend-exclude = 'migrations'

[tool.isort]
line_length = 100
profile = 'black'                      # We use blue which is close enough to black.
py_version = 310
extend_skip_glob = ['**/migrations/*']

[tool.pylint.messages_control]
max-line-length = 100

enable = [
  'useless-suppression', # helpful to remove dead lint ignore comments
]

disable = [
  'wildcard-import',            #
  'missing-docstring',          # C0111 missing docstrings are ok
  'missing-function-docstring', # C0116 missing docstrings are ok
  'missing-module-docstring',   # C0114 missing docstrings are ok
  'missing-class-docstring',    # C0115 missing docstrings are ok
  'too-few-public-methods',     # R0903 allow simple data/entity classes etc.
  'unused-wildcard-import',     #
]

ignore = 'migrations' # Do not enforce naming rules for generated files.


[tool.pytest.ini_options]
log_level = "DEBUG"
# log_format = "%(asctime)s %(levelname)s %(message)s"
log_format = "%(levelname)s %(message)s"
# norecursedirs = ['article', 'eat', 'sample_1']
#norecursedirs = ['article', 'sah', 'eat', 'sample_1']
#norecursedirs = ['article', 'tests', 'eat', 'sample1']
markers = [
  "wip: marks tests as work-in-progress (deselect with '-m \"not wip\"')",
  "wiz: marks tests as work-in-progesz (deselect with '-m \"not wiz\"')",
  "order: marks ordering for tests (example)",
]
# testpaths = ['tests', 'article', 'conftest_glue', 'eat', 'sah']
testpaths = ['tests', 'sah']
# pythonpath = ['conftest_glue', 'src', 'tests']
pythonpath = ['sah', 'src', 'tests']
# bdd_features_base_dir = 'sah'

# testpaths = 'article'
# testpaths = 'sample_1'
addopts = '--ignore=temp' # Don't look for py files in temp folder
# testpaths = ['sample_1']
# #testpaths = ['tests', '../features/steps']
# #pythonpath: Sets list of directories that should be added to the python search path.
# pythonpath = ['sah', 'tests']
# #pythonpath = ['domain', 'sample_1/step_defs']

# #python_files: File patterns determining which python files are considered as test modules.
# #python_files = ['test_*.py', '*_steps.py']
# #python_files = *_steps.py
# #python_files = test_*.py
# #python_files = *_steps.py
# python_files = ['test_*.py', '*_steps.py']
# #python_paths = ['.']

# [tool.pyright]
# #include = ["src"]
# include = ["**/step_defs"]
# exclude = [
#   "**/node_modules",
#   "**/__pycache__",
#   #    "src/experimental",
#   #    "src/typestubs"
# ]
# ignore = ["temp"]
# defineConstant = { DEBUG = true }
# #stubPath = "src/stubs"
# venv = ".venv"

# reportMissingImports = true
# reportMissingTypeStubs = false

# pythonVersion = "3.11"
# #pythonPlatform = "Linux"
# pythonPlatform = "Windows"

# executionEnvironments = [
#   #  { root = "src/web", pythonVersion = "3.5", pythonPlatform = "Windows", extraPaths = [ "src/service_libs" ] },
#   #  { root = "src/sdk", pythonVersion = "3.0", extraPaths = [ "src/backend" ] },
#   #  { root = "src/tests", extraPaths = ["src/tests/e2e", "src/sdk" ]},
#   #  { root = "src" }
#   { root = "features" },
# ]
